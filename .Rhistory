databar <- read.csv("databar.csv",header = TRUE,stringsAsFactors = FALSE)
library(dplyr)
library(plotly)
library(tidyverse)
bar.chart <- function(data,xaxis,yaxis) {
xx<- enquo(xaxis)
yy<- enquo(yaxis)
data.bar <- data %>%
select(!!xx,!!yy) %>%
top_n(10,!!xx)
qq_show(plot_ly(data.bar, x=~!!xx,y=~!!yy, type = 'bar', orientation='h', marker = list(color='rgb(64 224 208'))%>%
layout(xaxis = list(title='Proporsi Remaja'), title='10 Provinsi Tertinggi dengan Proporsi Remaja (15-24) berketerampilan TIK'))
# eval_tidy(
#   quo_squash(
#     quo({
#       plot_ly(data.bar, x=~!!xx,y=~!!yy, type = 'bar', orientation='h', marker = list(color='rgb(64 224 208'))%>%
#         layout(xaxis = list(title='Proporsi Remaja'), title='10 Provinsi Tertinggi dengan Proporsi Remaja (15-24) berketerampilan TIK')
#     })
#   )
# )
}
bar.chart(databar,X2015,Provinsi)
bar.chart <- function(data,xaxis,yaxis) {
xx<- enquo(xaxis)
yy<- enquo(yaxis)
data.bar <- data %>%
select(!!xx,!!yy) %>%
top_n(10,!!xx)
plot_ly(data.bar, x=~!!xx,y=~!!yy, type = 'bar', orientation='h', marker = list(color='rgb(64 224 208')%>%
layout(xaxis = list(title='Proporsi Remaja'), title='10 Provinsi Tertinggi dengan Proporsi Remaja (15-24) berketerampilan TIK'))
# eval_tidy(
#   quo_squash(
#     quo({
#       plot_ly(data.bar, x=~!!xx,y=~!!yy, type = 'bar', orientation='h', marker = list(color='rgb(64 224 208'))%>%
#         layout(xaxis = list(title='Proporsi Remaja'), title='10 Provinsi Tertinggi dengan Proporsi Remaja (15-24) berketerampilan TIK')
#     })
#   )
# )
}
bar.chart(databar,X2015,Provinsi)
bar.chart(databar,X2015,Provinsi)
bar.chart <- function(data,xaxis,yaxis) {
xx<- enquo(xaxis)
yy<- enquo(yaxis)
data.bar <- data %>%
select(!!xx,!!yy) %>%
top_n(10,!!xx)
p = plot_ly(data.bar, x=~!!xx,y=~!!yy, type = 'bar', orientation='h', marker = list(color='rgb(64 224 208')%>%
layout(xaxis = list(title='Proporsi Remaja'), title='10 Provinsi Tertinggi dengan Proporsi Remaja (15-24) berketerampilan TIK'))
eval_tidy(
quo_squash(
quo({
plot_ly(data.bar, x=~!!xx,y=~!!yy, type = 'bar', orientation='h', marker = list(color='rgb(64 224 208'))%>%
layout(xaxis = list(title='Proporsi Remaja'), title='10 Provinsi Tertinggi dengan Proporsi Remaja (15-24) berketerampilan TIK')
})
)
)
}
bar.chart(databar,X2015,Provinsi)
databar <- read.csv("databar.csv",header = TRUE,stringsAsFactors = FALSE)
data2015 <- databar %>%
select(Provinsi,X2015) %>%
top_n(10,X2015)
bar1 <- plot_ly(data2015, x=~X2015,y=~Provinsi, type = 'bar', orientation='h', marker = list(color='rgb(85 107 47)'))%>%
layout(xaxis = list(title='Proporsi Remaja'), title='10 Provinsi Tertinggi dengan Proporsi Remaja (15-24) berketerampilan TIK')
bar1
getwd()
shiny::runApp()
runApp()
library(plotly)
data <- read.csv("APK_line.csv")
p <- plot_ly(data, x = ~tahun, y = ~perdesaan, name = 'Perdesaan', type = 'scatter', mode = 'density',fill = 'tonexty', fillcolor = '#50CB86') %>%
add_trace(y = ~perkotaan, name = 'Perkotaan', fillcolor = '#F5FF8D') %>%
layout(title = 'Angka Partisipasi Kasar (APK) SD/MI/Sederajat Menurut Daerah Tempat Tinggal',
xaxis = list(title = "Tahun",
showgrid = TRUE),
yaxis = list(title = "APK",
range = c(95,120),
showgrid = TRUE))
getwd()
library(plotly)
data <- read.csv("APK_line.csv")
p <- plot_ly(data, x = ~tahun, y = ~perdesaan, name = 'Perdesaan', type = 'scatter', mode = 'density',fill = 'tonexty', fillcolor = '#50CB86') %>%
add_trace(y = ~perkotaan, name = 'Perkotaan', fillcolor = '#F5FF8D') %>%
layout(title = 'Angka Partisipasi Kasar (APK) SD/MI/Sederajat Menurut Daerah Tempat Tinggal',
xaxis = list(title = "Tahun",
showgrid = TRUE),
yaxis = list(title = "APK",
range = c(95,120),
showgrid = TRUE))
p
p <- plot_ly(data, x = ~tahun, y = ~perdesaan, name = 'Perdesaan', type = 'scatter', mode = 'density',fill = 'tonexty', fillcolor = 'blue') %>%
add_trace(y = ~perkotaan, name = 'Perkotaan', fillcolor = 'grey') %>%
layout(title = 'Angka Partisipasi Kasar (APK) SD/MI/Sederajat Menurut Daerah Tempat Tinggal',
xaxis = list(title = "Tahun",
showgrid = TRUE),
yaxis = list(title = "APK",
range = c(95,120),
showgrid = TRUE))
p
p <- plot_ly(data, x = ~tahun, y = ~perdesaan, name = 'Perdesaan', type = 'scatter', mode = 'density',fill = 'tonexty', fillcolor = 'grey') %>%
add_trace(y = ~perkotaan, name = 'Perkotaan', fillcolor = 'light-blue') %>%
layout(title = 'Angka Partisipasi Kasar (APK) SD/MI/Sederajat Menurut Daerah Tempat Tinggal',
xaxis = list(title = "Tahun",
showgrid = TRUE),
yaxis = list(title = "APK",
range = c(95,120),
showgrid = TRUE))
data <- read.csv("APK_line.csv")
p <- plot_ly(data, x = ~tahun, y = ~perdesaan, name = 'Perdesaan', type = 'scatter', mode = 'density',fill = 'tonexty', fillcolor = 'grey') %>%
add_trace(y = ~perkotaan, name = 'Perkotaan', fillcolor = 'light-blue') %>%
layout(title = 'Angka Partisipasi Kasar (APK) SD/MI/Sederajat Menurut Daerah Tempat Tinggal',
xaxis = list(title = "Tahun",
showgrid = TRUE),
yaxis = list(title = "APK",
range = c(95,120),
showgrid = TRUE))
p
plot_ly(data, x = ~tahun, y = ~perdesaan, name = 'Perdesaan', type = 'scatter', mode = 'density',fill = 'tonexty', fillcolor = 'grey')
p <- plot_ly(data, x = ~tahun, y = ~perdesaan, name = 'Perdesaan', type = 'scatter', mode = 'density',fill = 'grey', fillcolor = 'grey') %>%
add_trace(y = ~perkotaan, name = 'Perkotaan', fillcolor = 'skyblue') %>%
layout(title = 'Angka Partisipasi Kasar (APK) SD/MI/Sederajat Menurut Daerah Tempat Tinggal',
xaxis = list(title = "Tahun",
showgrid = FALSE),
yaxis = list(title = "APK",
range = c(0,115),
showgrid = FALSE))
plot_ly(data, x = ~tahun, y = ~perdesaan, name = 'Perdesaan', type = 'scatter', mode = 'density',fill = 'grey', fillcolor = 'grey')
p <- plot_ly(data, x = ~tahun, y = ~perdesaan, name = 'Perdesaan', type = 'scatter', mode = 'density',fill = 'tonexty', fillcolor = 'grey') %>%
add_trace(y = ~perkotaan, name = 'Perkotaan', fillcolor = 'skyblue') %>%
layout(title = 'Angka Partisipasi Kasar (APK) SD/MI/Sederajat Menurut Daerah Tempat Tinggal',
xaxis = list(title = "Tahun",
showgrid = FALSE),
yaxis = list(title = "APK",
range = c(0,115),
showgrid = FALSE))
p
p <- plot_ly(data, x = ~tahun, y = ~perdesaan, name = 'Perdesaan', type = 'scatter', mode = 'density',fill = 'tonexty', fillcolor = 'grey') %>%
add_trace(y = ~perkotaan, name = 'Perkotaan', fillcolor = 'skyblue') %>%
layout(title = 'Angka Partisipasi Kasar (APK) SD/MI/Sederajat Menurut Daerah Tempat Tinggal',
xaxis = list(title = "Tahun",
showgrid = FALSE),
yaxis = list(title = "APK",
range = c(90,115),
showgrid = FALSE))
p
colourpicker:::plotHelperAddin()
colourpicker:::plotHelperAddin()
colourpicker:::colourPickerAddin()
colourpicker:::colourPickerAddin()
colourpicker:::colourPickerAddin()
p <- plot_ly(data, x = ~tahun, y = ~perdesaan, name = 'Perdesaan', type = 'scatter', mode = 'density',fill = 'tonexty', fillcolor = 'c("#BABABA", "#FFFFFF", "#FFFFFF")') %>%
add_trace(y = ~perkotaan, name = 'Perkotaan', fillcolor = '#006FFF') %>%
layout(title = 'Angka Partisipasi Kasar (APK) SD/MI/Sederajat Menurut Daerah Tempat Tinggal',
xaxis = list(title = "Tahun",
showgrid = FALSE),
yaxis = list(title = "APK",
range = c(90,115),
showgrid = FALSE))
p
colourpicker:::colourPickerAddin()
data <- read.csv("APK_line.csv")
p <- plot_ly(data, x = ~tahun, y = ~perdesaan, name = 'Perdesaan', type = 'scatter', mode = 'density',fill = 'tonexty', fillcolor = 'gray75') %>%
add_trace(y = ~perkotaan, name = 'Perkotaan', fillcolor = '#006FFF') %>%
layout(title = 'Angka Partisipasi Kasar (APK) SD/MI/Sederajat Menurut Daerah Tempat Tinggal',
xaxis = list(title = "Tahun",
showgrid = FALSE),
yaxis = list(title = "APK",
range = c(90,115),
showgrid = FALSE))
p
data <- read.csv("APK_line.csv")
p <- plot_ly(data, x = ~tahun, y = ~perdesaan, name = 'Perdesaan', type = 'scatter', mode = 'density',fill = 'tonexty', fillcolor = 'gray75') %>%
add_trace(y = ~perkotaan, name = 'Perkotaan', fillcolor = '#006FFF') %>%
layout(title = 'Angka Partisipasi Kasar (APK) SD/MI/Sederajat Menurut Daerah Tempat Tinggal',
xaxis = list(title = "Tahun",
showgrid = FALSE),
yaxis = list(title = "APK",
range = c(90,115),
showgrid = FALSE))
p
p <- plot_ly(data, x = ~tahun, y = ~perdesaan, name = 'Perdesaan', type = 'scatter', mode = 'density',fill = 'tonexty', fillcolor = 'gray80') %>%
add_trace(y = ~perkotaan, name = 'Perkotaan', fillcolor = '#006FFF') %>%
layout(title = 'Angka Partisipasi Kasar (APK) SD/MI/Sederajat Menurut Daerah Tempat Tinggal',
xaxis = list(title = "Tahun",
showgrid = FALSE),
yaxis = list(title = "APK",
range = c(90,115),
showgrid = FALSE))
p
data <- read.csv("APK_line.csv")
p <- plot_ly(data, x = ~tahun, y = ~perdesaan, name = 'Perdesaan', type = 'scatter', mode = 'density',fill = 'tonexty', fillcolor = 'grey') %>%
add_trace(y = ~perkotaan, name = 'Perkotaan', fillcolor = 'skyblue') %>%
layout(title = 'Angka Partisipasi Kasar (APK) SD/MI/Sederajat Menurut Daerah Tempat Tinggal',
xaxis = list(title = "Tahun",
showgrid = FALSE),
yaxis = list(title = "APK",
range = c(90,115),
showgrid = FALSE))
p
library(plotly)
data <- read.csv("APK_line.csv")
p <- plot_ly(data, x = ~tahun, y = ~perdesaan, name = 'Perdesaan', type = 'scatter', mode = 'density',fill = 'tonexty', fillcolor = '#50CB86') %>%
add_trace(y = ~perkotaan, name = 'Perkotaan', fillcolor = '#F5FF8D') %>%
layout(title = 'Angka Partisipasi Kasar (APK) SD/MI/Sederajat Menurut Daerah Tempat Tinggal',
xaxis = list(title = "Tahun",
showgrid = TRUE),
yaxis = list(title = "APK",
range = c(95,120),
showgrid = TRUE))
p
shiny::runApp()
library(htmlwidgets)
library(highcharter)
library(geojsonio)
indo.json <- geojsonio::geojson_read("indonesia-prov.json", what = "list")
data <- read.csv("IPMedited")
color <- tes <- list(c(0,'#09e41f'),c(1/3,'#1ba602'),c(2/3,'#075800'))
map_chart <- function(json,data,col = color){
highchart() %>%
hc_title(text = "IPM Indonesia") %>%
hc_subtitle(text = "Source: BPS-RI") %>%
hc_add_series_map(json, data,
value = "IPM",
joinBy = c("ID", "id"),
borderColor = '#6CC4EE',
borderWidth = 0.5) %>%
hc_mapNavigation(enabled = T)%>%
hc_tooltip(formatter = JS("function(){
return ('<strong> Provinsi: </strong> ' + this.point.provinsi + ' <br> <strong>IPM: </strong> ' + this.point.IPM + ' <br> <strong>EYS:</strong> ' + this.point.EYS + ' <br> <strong>MYS:</strong> ' + this.point.MYS)
}"))%>%
hc_colorAxis(min = 50,max = 100,tickAmount = 4,type = "linier",stops = col)%>%
hc_chart(backgroundColor= '#cddee4',loading= c(hideDuration= 1000,showDuration= 1000))
}
map_chart(indo.json,data,color)
indo.json <- geojsonio::geojson_read("indonesia-prov.json", what = "list")
indo.json <- geojsonio::geojson_read("indonesia-prov.json", what = "list")
indo.json <- geojsonio::geojson_read("indonesia-prov.json", what = "list")
data <- read.csv("IPMedited")
color <- tes <- list(c(0,'#09e41f'),c(1/3,'#1ba602'),c(2/3,'#075800'))
data <- read.csv("IPMedited.csv")
color <- tes <- list(c(0,'#09e41f'),c(1/3,'#1ba602'),c(2/3,'#075800'))
map_chart <- function(json,data,col = color){
highchart() %>%
hc_title(text = "IPM Indonesia") %>%
hc_subtitle(text = "Source: BPS-RI") %>%
hc_add_series_map(json, data,
value = "IPM",
joinBy = c("ID", "id"),
borderColor = '#6CC4EE',
borderWidth = 0.5) %>%
hc_mapNavigation(enabled = T)%>%
hc_tooltip(formatter = JS("function(){
return ('<strong> Provinsi: </strong> ' + this.point.provinsi + ' <br> <strong>IPM: </strong> ' + this.point.IPM + ' <br> <strong>EYS:</strong> ' + this.point.EYS + ' <br> <strong>MYS:</strong> ' + this.point.MYS)
}"))%>%
hc_colorAxis(min = 50,max = 100,tickAmount = 4,type = "linier",stops = col)%>%
hc_chart(backgroundColor= '#cddee4',loading= c(hideDuration= 1000,showDuration= 1000))
}
map_chart(indo.json,data,color)
map_chart <- function(json,data,col = color){
highchart() %>%
hc_title(text = "IPM Indonesia") %>%
hc_subtitle(text = "Source: BPS-RI") %>%
hc_add_series_map(json, data,
value = "IPM",
joinBy = c("ID", "id"),
borderColor = '#6CC4EE',
borderWidth = 0.5) %>%
hc_mapNavigation(enabled = T)%>%
hc_tooltip(formatter = JS("function(){
return ('<strong> Provinsi: </strong> ' + this.point.provinsi + ' <br> <strong>IPM: </strong> ' + this.point.IPM + ' <br> <strong>EYS:</strong> ' + this.point.EYS + ' <br> <strong>MYS:</strong> ' + this.point.MYS)
}"))%>%
hc_colorAxis(min = 50,max = 100,tickAmount = 3,type = "linier",stops = col)%>%
hc_chart(backgroundColor= '#cddee4',loading= c(hideDuration= 1000,showDuration= 1000))
}
map_chart(indo.json,data,color)
map_chart <- function(json,data,col = color){
highchart() %>%
hc_title(text = "IPM Indonesia") %>%
hc_subtitle(text = "Source: BPS-RI") %>%
hc_add_series_map(json, data,
value = "IPM",
joinBy = c("ID", "id"),
borderColor = '#6CC4EE',
borderWidth = 0.5) %>%
hc_mapNavigation(enabled = T)%>%
hc_tooltip(formatter = JS("function(){
return ('<strong> Provinsi: </strong> ' + this.point.provinsi + ' <br> <strong>IPM: </strong> ' + this.point.IPM + ' <br> <strong>EYS:</strong> ' + this.point.EYS + ' <br> <strong>MYS:</strong> ' + this.point.MYS)
}"))%>%
hc_colorAxis(min = 50,max = 100,tickAmount = 4,type = "linier",stops = col)%>%
hc_chart(backgroundColor= '#cddee4',loading= c(hideDuration= 1000,showDuration= 1000))
}
map_chart(indo.json,data,color)
color <- tes <- list(c(0,'#FFFFFF'),c(1/3,'#1ba602'),c(2/3,'#075800'))
map_chart(indo.json,data,color)
map_chart <- function(json,data,col = color){
highchart() %>%
hc_title(text = "IPM Indonesia") %>%
hc_subtitle(text = "Source: BPS-RI") %>%
hc_add_series_map(json, data,
value = "IPM",
joinBy = c("ID", "id"),
borderColor = '#6CC4EE',
borderWidth = 0.5) %>%
hc_mapNavigation(enabled = T)%>%
hc_tooltip(formatter = JS("function(){
return ('<strong> Provinsi: </strong> ' + this.point.provinsi + ' <br> <strong>IPM: </strong> ' + this.point.IPM + ' <br> <strong>EYS:</strong> ' + this.point.EYS + ' <br> <strong>MYS:</strong> ' + this.point.MYS)
}"))%>%
hc_colorAxis(min = 50,max = 100, minColor = "#FFFFFF", maxColor="#075800", tickAmount = 4,type = "linier")%>%
hc_chart(backgroundColor= '#cddee4',loading= c(hideDuration= 1000,showDuration= 1000))
}
map_chart(indo.json,data,color)
map_chart <- function(json,data,col = color){
highchart() %>%
hc_title(text = "IPM Indonesia") %>%
hc_subtitle(text = "Source: BPS-RI") %>%
hc_add_series_map(json, data,
value = "IPM",
joinBy = c("ID", "id"),
borderColor = '#6CC4EE',
borderWidth = 0.5) %>%
hc_mapNavigation(enabled = T)%>%
hc_tooltip(formatter = JS("function(){
return ('<strong> Provinsi: </strong> ' + this.point.provinsi + ' <br> <strong>IPM: </strong> ' + this.point.IPM + ' <br> <strong>EYS:</strong> ' + this.point.EYS + ' <br> <strong>MYS:</strong> ' + this.point.MYS)
}"))%>%
hc_colorAxis(min = 50, max = 100, minColor = "#FFFFFF", maxColor="green", tickAmount = 4,type = "linier")%>%
hc_chart(backgroundColor= '#cddee4',loading= c(hideDuration= 1000,showDuration= 1000))
}
map_chart(indo.json,data,color)
max(data$IPM)
min(data$IPM)
map_chart <- function(json,data,col = color){
highchart() %>%
hc_title(text = "IPM Indonesia") %>%
hc_subtitle(text = "Source: BPS-RI") %>%
hc_add_series_map(json, data,
value = "IPM",
joinBy = c("ID", "id"),
borderColor = '#6CC4EE',
borderWidth = 0.5) %>%
hc_mapNavigation(enabled = T)%>%
hc_tooltip(formatter = JS("function(){
return ('<strong> Provinsi: </strong> ' + this.point.provinsi + ' <br> <strong>IPM: </strong> ' + this.point.IPM + ' <br> <strong>EYS:</strong> ' + this.point.EYS + ' <br> <strong>MYS:</strong> ' + this.point.MYS)
}"))%>%
hc_colorAxis(min = 50, max = 90, minColor = "#FFFFFF", maxColor="green", tickAmount = 5,type = "linier")%>%
hc_chart(backgroundColor= '#cddee4',loading= c(hideDuration= 1000,showDuration= 1000))
}
map_chart(indo.json,data,color)
map_chart <- function(json,data,col = color){
highchart() %>%
hc_title(text = "IPM Indonesia") %>%
hc_subtitle(text = "Source: BPS-RI") %>%
hc_add_series_map(json, data,
value = "IPM",
joinBy = c("ID", "id"),
borderColor = '#6CC4EE',
borderWidth = 0.5) %>%
hc_mapNavigation(enabled = T)%>%
hc_tooltip(formatter = JS("function(){
return ('<strong> Provinsi: </strong> ' + this.point.provinsi + ' <br> <strong>IPM: </strong> ' + this.point.IPM + ' <br> <strong>EYS:</strong> ' + this.point.EYS + ' <br> <strong>MYS:</strong> ' + this.point.MYS)
}"))%>%
hc_colorAxis(min = 50, max = 90, tickAmount = 5,type = "linier", stops = color)%>%
hc_chart(backgroundColor= '#cddee4',loading= c(hideDuration= 1000,showDuration= 1000))
}
map_chart(indo.json,data,color)
